/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package domesticfinancesystem.calendar.moonphase;

import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author sneha
 */
public class MoonPhaseForm extends javax.swing.JFrame {

    /**
     * Creates new form MoonPhaseForm
     */
    private Image[] moonImages;
    public MoonPhaseForm() {
        initComponents();
       moonImages =  fillMoonImages();
        
    }
   
    public Image[] fillMoonImages()
    {
       String[] moonFileNames = {"01 New Moon","02 Waxing Crescent","03 First Quarter","04 Waxing Gibbous","05 Full Moon","06 Waning Gibbous","07 Last Quarter","08 Warning Crescent"};
        File imageFolder = new File("C:\\Users\\sneha\\Desktop\\Moon Images");
//        File imageFolder = new File("Moon Images");
        Image[] moonImages = new Image[moonFileNames.length];
        int i = 0;
        for (String filename: moonFileNames) {
           try {
               System.out.println("filename: "+filename);
               moonImages[i++] = ImageIO.read(new File(imageFolder,filename+".png"));
           } catch (IOException ex) {
               Logger.getLogger(MoonPhaseForm.class.getName()).log(Level.SEVERE, null, ex);
           }
        }
        return moonImages;
    }
    public void displayMoonImage(int index)
    {
        Image img = moonImages[index];
        lblMoon.setIcon(new ImageIcon(img));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMoon = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaMoonInfo = new javax.swing.JTextArea();
        btnGo = new javax.swing.JButton();
        spnDate = new javax.swing.JSpinner();
        spnNumber = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblMoon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateActionPerformed(evt);
            }
        });

        txtAreaMoonInfo.setColumns(20);
        txtAreaMoonInfo.setFont(new java.awt.Font("Courier New", 0, 13)); // NOI18N
        txtAreaMoonInfo.setRows(5);
        jScrollPane1.setViewportView(txtAreaMoonInfo);

        btnGo.setText("Go");
        btnGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoActionPerformed(evt);
            }
        });

        spnDate.setModel(new javax.swing.SpinnerDateModel());

        spnNumber.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));
        spnNumber.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnNumberStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(btnGo)
                        .addGap(41, 41, 41)
                        .addComponent(spnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(spnNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblMoon, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGo)
                    .addComponent(spnDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spnNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMoon, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateActionPerformed

    private void btnGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoActionPerformed
        // TODO add your handling code here:
        String str = txtDate.getText().trim();
        Date d = (Date)spnDate.getValue();
//            Date d;
//        
//            DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
//            
//            try
//            {
//               d = df.parse(str) ;
//            }
//            catch (ParseException ex)
//            {
//                 d = new GregorianCalendar().getTime();
//                 txtDate.setText("");
//            }
            String s = "";
            MoonPhase mp = new MoonPhase(d);
            s+="Illuminated Fraction: " + mp.illuminatedFraction+"\n"; 
            s+="            Moon Age: " + mp.moonAge+"\n"; 
            s+="       Moon distance: " + mp.distance+"\n"; 
            s+="        Sun Distance: " + mp.sunDistance+"\n"; 
            s+="Sun Angular diameter: " + mp.sunAngularDiameter+"\n"; 
            s+="       Moon Fraction: " + mp.moonFraction+"\n"; 
            s+=mp.toString();
            txtAreaMoonInfo.setText(s);

            double mf = mp.moonFraction*1000;
            double phaseNumber = 1000.0/moonImages.length ;
            int index  = (int)(Math.round(mf/phaseNumber));
            if(index == moonImages.length)
                index = 0;
            
//            displayMoonImage((int)(Math.random()*moonImages.length));
            displayMoonImage(index);
    }//GEN-LAST:event_btnGoActionPerformed

    private void spnNumberStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnNumberStateChanged
        // TODO add your handling code here:
                    double mf = (int)spnNumber.getValue()*10.0;
            double phaseNumber = 1000.0/moonImages.length ;
            
            int index  = (int)(Math.round(mf/phaseNumber));
            
            if(index == moonImages.length)
                index = 0;
            
            txtDate.setText(""+index);
//            displayMoonImage((int)(Math.random()*moonImages.length));
            displayMoonImage(index);

    }//GEN-LAST:event_spnNumberStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MoonPhaseForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MoonPhaseForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MoonPhaseForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MoonPhaseForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MoonPhaseForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMoon;
    private javax.swing.JSpinner spnDate;
    private javax.swing.JSpinner spnNumber;
    private javax.swing.JTextArea txtAreaMoonInfo;
    private javax.swing.JTextField txtDate;
    // End of variables declaration//GEN-END:variables
}
