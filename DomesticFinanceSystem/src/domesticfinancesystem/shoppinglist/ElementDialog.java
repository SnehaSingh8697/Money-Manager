/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package domesticfinancesystem.shoppinglist;

import domesticfinancesystem.MainFrame;
import domesticfinancesystem.calendar.Database;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author sneha
 */
public class ElementDialog extends javax.swing.JDialog {

    /**
     * Creates new form ElementDialog
     */
    private int val;
    private Database dc;
    private Connection con;
    private String name;
    private Object object;
   
    public ElementDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
    }
    public ElementDialog(java.awt.Frame parent, boolean modal,String name,int val) {
        this(parent,modal);
        lblName.setText(name);
        this.val = val;
        dc = MainFrame.dc;
        con = dc.createConnection();
        if(val == 1)
            setTitle("Create Item");
        else
            setTitle("Create UOM");
  
               
    }
    
    public Object getOBject()
    {
        return object;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblName.setFont(new java.awt.Font("Garamond", 0, 14)); // NOI18N

        btnOk.setFont(new java.awt.Font("Garamond", 1, 18)); // NOI18N
        btnOk.setForeground(new java.awt.Color(102, 0, 0));
        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Garamond", 1, 18)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 0, 0));
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnOk)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtName)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnOk))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        // TODO add your handling code here:
        name = txtName.getText().trim();
        if(name != null && !name.isEmpty())
        {

            try {
               String sql;
               if(val == 1)
               {
                    sql = "Select * from ListItem where Name = ?";
                    PreparedStatement pstmt = con.prepareStatement(sql);
                    pstmt.setString(1,name);
                    ResultSet rst = pstmt.executeQuery();
                    boolean found = false;
                    if(rst.next())
                    {
                        found = true;
                    }
                    rst.close();
                    pstmt.close();
                    if(found)
                    {
                       JOptionPane.showMessageDialog(this, "Item by this name already exists", "Message", JOptionPane.ERROR_MESSAGE);
                    }
                    else
                    {
                        sql = "Select seq.nextval from dual";
                        Statement stmt = con.createStatement();
                        rst = stmt.executeQuery(sql);
                        int id = 0;
                        if(rst.next())
                        {
                            id = rst.getInt(1);
                        }
                        rst.close();
                        stmt.close();
                        sql = "Insert into ListItem(Id,Name) values(?,?)";
                        pstmt = con.prepareStatement(sql);
                        pstmt.setInt(1, id);
                        pstmt.setString(2, name);
                        pstmt.executeUpdate();
                        pstmt.close();
                        
                        object = new ListItem(id, name);
                        
                        setVisible(false);
                    }
               }
               else
               {
                    sql = "Select * from UOM where Name = ?";
                    PreparedStatement pstmt = con.prepareStatement(sql);
                    pstmt.setString(1,name);
                    ResultSet rst = pstmt.executeQuery();
                    boolean found = false;
                    if(rst.next())
                    {
                        found = true;
                    }
                    rst.close();
                    pstmt.close();
                    if(found)
                    {
                        JOptionPane.showMessageDialog(this, "Unit of measurement by this name already exists", "Message", JOptionPane.ERROR_MESSAGE);
                    }
                    else
                    {
                        sql = "Select seq.nextval from dual";
                        Statement stmt = con.createStatement();
                        rst = stmt.executeQuery(sql);
                        int id = 0;
                        if(rst.next())
                        {
                            id = rst.getInt(1);
                        }
                        rst.close();
                        stmt.close();
                        sql = "Insert into UOM(Id,Name) values(?,?)";
                        pstmt = con.prepareStatement(sql);
                        pstmt.setInt(1, id);
                        pstmt.setString(2, name);
                        pstmt.executeUpdate();
                        pstmt.close();
                        
                        object = new UOM(id, name);
                        
                        setVisible(false);
                    }

               }
               
            } catch (SQLException ex) {
                Logger.getLogger(ElementDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
           JOptionPane.showMessageDialog(this, "Name not entered", "Message", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnOkActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        object = null;
        setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ElementDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ElementDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ElementDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ElementDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ElementDialog dialog = new ElementDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JLabel lblName;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
